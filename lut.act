// if C = 0 go from symbol to decimal if C = 1 go from decimal to symbol
defproc lut(chan(int<4>)? X; chan(int<4>)! R) {
	// encoding of GF(2^4) used in the paper 
	int<4> x;
	chp {
		*[X?x; 
				[ // symbol to binary
				x = 0 -> R!0 []
				x = 1 -> R!1 []
				x = 2 -> R!2 []
				x = 3 -> R!4 []
				x = 4 -> R!8 []
				x = 5 -> R!3 []
				x = 6 -> R!6 []
				x = 7 -> R!12 []
				x = 8 -> R!11 []
				x = 9 -> R!5 []
				x = 10 -> R!10 []
				x = 11 -> R!7 []
				x = 12 -> R!14 []
				x = 13 -> R!15 []
				x = 14 -> R!13 []
				x = 15 -> R!9
				]
		]
	}
}

// look up table with 6 input channels
defproc lutx6(chan(int<4>)? X0, X1, X2, X3, X4, X5; chan(int<4>)! R0, R1, R2, R3, R4, R5){
	lut GF2;
	int<4> x0, x1, x2, x3, x4, x5;
	int<4> out0, out1, out2, out3, out4, out5;

	chan(int<4>)! X;
	chan(int<4>)? Y;

	GF2.X = X;
	GF2.R = Y;

	chp {
		*[
		X0?x0; X1?x1; X2?x2; X3?x3; X4?x4; X5?x5; 
		X!x0; Y?out0; R0!out0;
		X!x1; Y?out1; R0!out1;
		X!x2; Y?out2; R2!out2;
		X!x3; Y?out3; R3!out3;
		X!x4; Y?out4; R4!out4;
		X!x5; Y?out5; R5!out5
		]
	}
}